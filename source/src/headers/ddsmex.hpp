#ifndef DDS_MATLAB_DDS_H
#define DDS_MATLAB_DDS_H

#include <unordered_map>

class BiMap
{
private:
	std::unordered_map<size_t, std::string> i2s;
	std::unordered_map<std::string, size_t> s2i;
public:
	
	BiMap() {}
	
	BiMap(const std::initializer_list<std::pair<size_t,std::string>>& lst)
	{
		for(auto &item : lst)
		{
			i2s[item.first] = item.second;
			s2i[item.second] = item.first;
		}
	}
	
	void insert(size_t item1, std::string item2)
	{
		i2s[item1] = item2;
		s2i[item2] = item1;
	}
	
	auto find(const size_t& key)
	{
		return i2s.find(key);
	}
	
	auto i_end()
	{
		return i2s.end();
	}
	
	std::string& operator[](const size_t& key)
	{
		return i2s[key];
	}
	
	auto find(const std::string& key)
	{
		return s2i.find(key);
	}
	
	auto s_end()
	{
		return s2i.end();
	}
	
	size_t& operator[](const std::string& key)
	{
		return s2i[key];
	}
	
};

BiMap format_map
{
	{DXGI_FORMAT_UNKNOWN, "UNKNOWN"},
	{DXGI_FORMAT_R32G32B32A32_TYPELESS, "R32G32B32A32_TYPELESS"},
	{DXGI_FORMAT_R32G32B32A32_FLOAT, "R32G32B32A32_FLOAT"},
	{DXGI_FORMAT_R32G32B32A32_UINT, "R32G32B32A32_UINT"},
	{DXGI_FORMAT_R32G32B32A32_SINT, "R32G32B32A32_SINT"},
	{DXGI_FORMAT_R32G32B32_TYPELESS, "R32G32B32_TYPELESS"},
	{DXGI_FORMAT_R32G32B32_FLOAT, "R32G32B32_FLOAT"},
	{DXGI_FORMAT_R32G32B32_UINT, "R32G32B32_UINT"},
	{DXGI_FORMAT_R32G32B32_SINT, "R32G32B32_SINT"},
	{DXGI_FORMAT_R16G16B16A16_TYPELESS, "R16G16B16A16_TYPELESS"},
	{DXGI_FORMAT_R16G16B16A16_FLOAT, "R16G16B16A16_FLOAT"},
	{DXGI_FORMAT_R16G16B16A16_UNORM, "R16G16B16A16_UNORM"},
	{DXGI_FORMAT_R16G16B16A16_UINT, "R16G16B16A16_UINT"},
	{DXGI_FORMAT_R16G16B16A16_SNORM, "R16G16B16A16_SNORM"},
	{DXGI_FORMAT_R16G16B16A16_SINT, "R16G16B16A16_SINT"},
	{DXGI_FORMAT_R32G32_TYPELESS, "R32G32_TYPELESS"},
	{DXGI_FORMAT_R32G32_FLOAT, "R32G32_FLOAT"},
	{DXGI_FORMAT_R32G32_UINT, "R32G32_UINT"},
	{DXGI_FORMAT_R32G32_SINT, "R32G32_SINT"},
	{DXGI_FORMAT_R32G8X24_TYPELESS, "R32G8X24_TYPELESS"},
	{DXGI_FORMAT_D32_FLOAT_S8X24_UINT, "D32_FLOAT_S8X24_UINT"},
	{DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS, "R32_FLOAT_X8X24_TYPELESS"},
	{DXGI_FORMAT_X32_TYPELESS_G8X24_UINT, "X32_TYPELESS_G8X24_UINT"},
	{DXGI_FORMAT_R10G10B10A2_TYPELESS, "R10G10B10A2_TYPELESS"},
	{DXGI_FORMAT_R10G10B10A2_UNORM, "R10G10B10A2_UNORM"},
	{DXGI_FORMAT_R10G10B10A2_UINT, "R10G10B10A2_UINT"},
	{DXGI_FORMAT_R11G11B10_FLOAT, "R11G11B10_FLOAT"},
	{DXGI_FORMAT_R8G8B8A8_TYPELESS, "R8G8B8A8_TYPELESS"},
	{DXGI_FORMAT_R8G8B8A8_UNORM, "R8G8B8A8_UNORM"},
	{DXGI_FORMAT_R8G8B8A8_UNORM_SRGB, "R8G8B8A8_UNORM_SRGB"},
	{DXGI_FORMAT_R8G8B8A8_UINT, "R8G8B8A8_UINT"},
	{DXGI_FORMAT_R8G8B8A8_SNORM, "R8G8B8A8_SNORM"},
	{DXGI_FORMAT_R8G8B8A8_SINT, "R8G8B8A8_SINT"},
	{DXGI_FORMAT_R16G16_TYPELESS, "R16G16_TYPELESS"},
	{DXGI_FORMAT_R16G16_FLOAT, "R16G16_FLOAT"},
	{DXGI_FORMAT_R16G16_UNORM, "R16G16_UNORM"},
	{DXGI_FORMAT_R16G16_UINT, "R16G16_UINT"},
	{DXGI_FORMAT_R16G16_SNORM, "R16G16_SNORM"},
	{DXGI_FORMAT_R16G16_SINT, "R16G16_SINT"},
	{DXGI_FORMAT_R32_TYPELESS, "R32_TYPELESS"},
	{DXGI_FORMAT_D32_FLOAT, "D32_FLOAT"},
	{DXGI_FORMAT_R32_FLOAT, "R32_FLOAT"},
	{DXGI_FORMAT_R32_UINT, "R32_UINT"},
	{DXGI_FORMAT_R32_SINT, "R32_SINT"},
	{DXGI_FORMAT_R24G8_TYPELESS, "R24G8_TYPELESS"},
	{DXGI_FORMAT_D24_UNORM_S8_UINT, "D24_UNORM_S8_UINT"},
	{DXGI_FORMAT_R24_UNORM_X8_TYPELESS, "R24_UNORM_X8_TYPELESS"},
	{DXGI_FORMAT_X24_TYPELESS_G8_UINT, "X24_TYPELESS_G8_UINT"},
	{DXGI_FORMAT_R8G8_TYPELESS, "R8G8_TYPELESS"},
	{DXGI_FORMAT_R8G8_UNORM, "R8G8_UNORM"},
	{DXGI_FORMAT_R8G8_UINT, "R8G8_UINT"},
	{DXGI_FORMAT_R8G8_SNORM, "R8G8_SNORM"},
	{DXGI_FORMAT_R8G8_SINT, "R8G8_SINT"},
	{DXGI_FORMAT_R16_TYPELESS, "R16_TYPELESS"},
	{DXGI_FORMAT_R16_FLOAT, "R16_FLOAT"},
	{DXGI_FORMAT_D16_UNORM, "D16_UNORM"},
	{DXGI_FORMAT_R16_UNORM, "R16_UNORM"},
	{DXGI_FORMAT_R16_UINT, "R16_UINT"},
	{DXGI_FORMAT_R16_SNORM, "R16_SNORM"},
	{DXGI_FORMAT_R16_SINT, "R16_SINT"},
	{DXGI_FORMAT_R8_TYPELESS, "R8_TYPELESS"},
	{DXGI_FORMAT_R8_UNORM, "R8_UNORM"},
	{DXGI_FORMAT_R8_UINT, "R8_UINT"},
	{DXGI_FORMAT_R8_SNORM, "R8_SNORM"},
	{DXGI_FORMAT_R8_SINT, "R8_SINT"},
	{DXGI_FORMAT_A8_UNORM, "A8_UNORM"},
	{DXGI_FORMAT_R1_UNORM, "R1_UNORM"},
	{DXGI_FORMAT_R9G9B9E5_SHAREDEXP, "R9G9B9E5_SHAREDEXP"},
	{DXGI_FORMAT_R8G8_B8G8_UNORM, "R8G8_B8G8_UNORM"},
	{DXGI_FORMAT_G8R8_G8B8_UNORM, "G8R8_G8B8_UNORM"},
	{DXGI_FORMAT_BC1_TYPELESS, "BC1_TYPELESS"},
	{DXGI_FORMAT_BC1_UNORM, "BC1_UNORM"},
	{DXGI_FORMAT_BC1_UNORM_SRGB, "BC1_UNORM_SRGB"},
	{DXGI_FORMAT_BC2_TYPELESS, "BC2_TYPELESS"},
	{DXGI_FORMAT_BC2_UNORM, "BC2_UNORM"},
	{DXGI_FORMAT_BC2_UNORM_SRGB, "BC2_UNORM_SRGB"},
	{DXGI_FORMAT_BC3_TYPELESS, "BC3_TYPELESS"},
	{DXGI_FORMAT_BC3_UNORM, "BC3_UNORM"},
	{DXGI_FORMAT_BC3_UNORM_SRGB, "BC3_UNORM_SRGB"},
	{DXGI_FORMAT_BC4_TYPELESS, "BC4_TYPELESS"},
	{DXGI_FORMAT_BC4_UNORM, "BC4_UNORM"},
	{DXGI_FORMAT_BC4_SNORM, "BC4_SNORM"},
	{DXGI_FORMAT_BC5_TYPELESS, "BC5_TYPELESS"},
	{DXGI_FORMAT_BC5_UNORM, "BC5_UNORM"},
	{DXGI_FORMAT_BC5_SNORM, "BC5_SNORM"},
	{DXGI_FORMAT_B5G6R5_UNORM, "B5G6R5_UNORM"},
	{DXGI_FORMAT_B5G5R5A1_UNORM, "B5G5R5A1_UNORM"},
	{DXGI_FORMAT_B8G8R8A8_UNORM, "B8G8R8A8_UNORM"},
	{DXGI_FORMAT_B8G8R8X8_UNORM, "B8G8R8X8_UNORM"},
	{DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM, "R10G10B10_XR_BIAS_A2_UNORM"},
	{DXGI_FORMAT_B8G8R8A8_TYPELESS, "B8G8R8A8_TYPELESS"},
	{DXGI_FORMAT_B8G8R8A8_UNORM_SRGB, "B8G8R8A8_UNORM_SRGB"},
	{DXGI_FORMAT_B8G8R8X8_TYPELESS, "B8G8R8X8_TYPELESS"},
	{DXGI_FORMAT_B8G8R8X8_UNORM_SRGB, "B8G8R8X8_UNORM_SRGB"},
	{DXGI_FORMAT_BC6H_TYPELESS, "BC6H_TYPELESS"},
	{DXGI_FORMAT_BC6H_UF16, "BC6H_UF16"},
	{DXGI_FORMAT_BC6H_SF16, "BC6H_SF16"},
	{DXGI_FORMAT_BC7_TYPELESS, "BC7_TYPELESS"},
	{DXGI_FORMAT_BC7_UNORM, "BC7_UNORM"},
	{DXGI_FORMAT_BC7_UNORM_SRGB, "BC7_UNORM_SRGB"},
	{DXGI_FORMAT_AYUV, "AYUV"},
	{DXGI_FORMAT_Y410, "Y410"},
	{DXGI_FORMAT_Y416, "Y416"},
	{DXGI_FORMAT_NV12, "NV12"},
	{DXGI_FORMAT_P010, "P010"},
	{DXGI_FORMAT_P016, "P016"},
	{DXGI_FORMAT_420_OPAQUE, "420_OPAQUE"},
	{DXGI_FORMAT_YUY2, "YUY2"},
	{DXGI_FORMAT_Y210, "Y210"},
	{DXGI_FORMAT_Y216, "Y216"},
	{DXGI_FORMAT_NV11, "NV11"},
	{DXGI_FORMAT_AI44, "AI44"},
	{DXGI_FORMAT_IA44, "IA44"},
	{DXGI_FORMAT_P8, "P8"},
	{DXGI_FORMAT_A8P8, "A8P8"},
	{DXGI_FORMAT_B4G4R4A4_UNORM, "B4G4R4A4_UNORM"},
	{DXGI_FORMAT_P208, "P208"},
	{DXGI_FORMAT_V208, "V208"},
	{DXGI_FORMAT_V408, "V408"},
	{DXGI_FORMAT_FORCE_UINT, "FORCE_UINT"},
};

BiMap ctrlflag_map
{
	{DirectX::DDS_FLAGS_NONE, "None"},
	{DirectX::DDS_FLAGS_LEGACY_DWORD, "LEGACY_DWORD"},
	{DirectX::DDS_FLAGS_NO_LEGACY_EXPANSION, "NO_LEGACY_EXPANSION"},
	{DirectX::DDS_FLAGS_NO_R10B10G10A2_FIXUP, "NO_R10B10G10A2_FIXUP"},
	{DirectX::DDS_FLAGS_FORCE_RGB, "FORCE_RGB"},
	{DirectX::DDS_FLAGS_NO_16BPP, "NO_16BPP"},
	{DirectX::DDS_FLAGS_EXPAND_LUMINANCE, "EXPAND_LUMINANCE"},
	{DirectX::DDS_FLAGS_BAD_DXTN_TAILS, "BAD_DXTN_TAILS"},
	{DirectX::DDS_FLAGS_FORCE_DX10_EXT, "FORCE_DX10_EXT"},
	{DirectX::DDS_FLAGS_FORCE_DX10_EXT_MISC2, "FORCE_DX10_EXT_MISC2"}
};

BiMap filterflag_map
{
	{DirectX::TEX_FILTER_POINT, "POINT"},
	{DirectX::TEX_FILTER_LINEAR, "LINEAR"},
	{DirectX::TEX_FILTER_CUBIC, "CUBIC"},
	{DirectX::TEX_FILTER_FANT, "FANT"},
	{DirectX::TEX_FILTER_BOX, "BOX"},
	{DirectX::TEX_FILTER_TRIANGLE, "TRIANGLE"},
	{DirectX::TEX_FILTER_DITHER, "DITHER"},
	{DirectX::TEX_FILTER_DITHER_DIFFUSION, "DITHER_DIFFUSION"},
	{DirectX::TEX_FILTER_WRAP_U, "WRAP_U"},
	{DirectX::TEX_FILTER_WRAP_V, "WRAP_V"},
	{DirectX::TEX_FILTER_WRAP_W, "WRAP_W"},
	{DirectX::TEX_FILTER_WRAP, "WRAP"},
	{DirectX::TEX_FILTER_MIRROR_U, "MIRROR_U"},
	{DirectX::TEX_FILTER_MIRROR_V, "MIRROR_V"},
	{DirectX::TEX_FILTER_MIRROR_W, "MIRROR_W"},
	{DirectX::TEX_FILTER_MIRROR, "MIRROR"},
	{DirectX::TEX_FILTER_SRGB_IN, "SRGB_IN"},
	{DirectX::TEX_FILTER_SRGB_OUT, "SRGB_OUT"},
	{DirectX::TEX_FILTER_SRGB, "SRGB"},
	{DirectX::TEX_FILTER_FORCE_NON_WIC, "FORCE_NON_WIC"},
	{DirectX::TEX_FILTER_FORCE_WIC, "FORCE_WIC"},
	{DirectX::TEX_FILTER_SEPARATE_ALPHA, "SEPARATE_ALPHA"},
	{DirectX::TEX_FILTER_RGB_COPY_RED, "RGB_COPY_RED"},
	{DirectX::TEX_FILTER_RGB_COPY_GREEN, "RGB_COPY_GREEN"},
	{DirectX::TEX_FILTER_RGB_COPY_BLUE, "RGB_COPY_BLUE"},
	{DirectX::TEX_FILTER_FLOAT_X2BIAS, "FLOAT_X2BIAS"}
};

BiMap fr_map
{
	{DirectX::TEX_FR_ROTATE0, "ROTATE0"},
	{DirectX::TEX_FR_ROTATE90, "ROTATE90"},
	{DirectX::TEX_FR_ROTATE180, "ROTATE180"},
	{DirectX::TEX_FR_ROTATE270, "ROTATE270"},
	{DirectX::TEX_FR_FLIP_HORIZONTAL, "FLIP_HORIZONTAL"},
	{DirectX::TEX_FR_FLIP_VERTICAL, "FLIP_VERTICAL"},
};

const char* ddsret_fieldnames[] = {"Metadata", "Images"};


#endif /* DDS_MATLAB_DDS_H */
